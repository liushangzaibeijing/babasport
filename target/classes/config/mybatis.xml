<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

  <!-- 配置sqlsessionfactory  配置spring和mybatis的集成-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     <!-- 数据源属性 -->
     <property name="dataSource" ref="dataSource" />
     <!-- mapperLocations指定dao的xml文件，不需要再创建一个mybatis-config.xml的配置文件  -->
     <property name="mapperLocations" value="classpath:cn/babasport/xiu/core/dao/*.xml" />
     <!-- 设置别名 -->
     <property name="typeAliasesPackage" value="cn.babasport.xiu.core.bean"></property>
  </bean>

  
  <!-- mybatis的dao层实现类的动态代理 批量扫包 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
     <property name="basePackage" value="cn.babasport.xiu.core.dao" />
  </bean>
  
     
 </beans>