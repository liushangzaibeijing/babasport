<web-app
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://java.sun.com/xml/ns/javaee"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
  id="WebApp_ID" version="3.0">
  <display-name>Archetype Created Web Application</display-name>
  
  <!-- servlet的上下文环境参数 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:application-context.xml</param-value>
  </context-param>
  
   <!-- spring的监听器 -->
   <listener>
     <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>
   
     <!-- 解决中文乱码  -->
   <filter>
        <filter-name>encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
   
    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>*.shtml</url-pattern>
    </filter-mapping>
   
   
   
   <!-- 使用OScache页面缓存来缓存整个jsp页面  OScache使用url+查询字符串来作为key来缓存数据
                       缓存本质为map类型的数据结构，当用户不断刷新用户界面时，url一定 在第一次的时候会调用后台
                      以后再次访问，会从OSchche中通过url作为key去查找数据，返回给页面
    
   <filter>
	    <filter-name>CacheFilter</filter-name>
	    <filter-class>com.opensymphony.oscache.web.filter.CacheFilter</filter-class>
	           设置缓存时间 单位为秒 
	    <init-param>
	        <param-name>time</param-name>
	        <param-value>7200</param-value>
	    </init-param>
	          设置缓存的范围  有四种范围：application session request jsp页面 
	    <init-param>
	        <param-name>scope</param-name>
	        <param-value>application</param-value>
	    </init-param>
   </filter>
       对指定的请求进行过滤  如果过滤多个可以使用使用通配符，和配置多个<filter-mapping> 
  <filter-mapping>
	    <filter-name>CacheFilter</filter-name>
	    <url-pattern>/front/productList.shtml</url-pattern>
  </filter-mapping>
  -->

   <!-- spring的前台servlet -->
  <servlet>
    <servlet-name>front</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc-front.xml</param-value>
    </init-param>
  </servlet>

  <servlet-mapping>
    <servlet-name>front</servlet-name>
    <url-pattern>*.shtml</url-pattern>
  </servlet-mapping>
  
  
  <!-- springmvc 配置   后台-->
  <servlet>
    <servlet-name>back</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc-back.xml</param-value>
    </init-param>
  </servlet>

  <servlet-mapping>
    <servlet-name>back</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  
</web-app>
