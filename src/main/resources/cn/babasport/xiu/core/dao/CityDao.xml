<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.babasport.xiu.core.dao.CityDao">
	<resultMap id="city" type="City">
		<result property="id" column="id" />
		<result property="code" column="code" />
		<result property="name" column="name" />
		<result property="province" column="province" />
	</resultMap>
	<!-- Select SQL -->
	<!-- 指定字段查询或者查询全部 -->
	<sql id="citySelector">
		SELECT
			<if test="fields != null">
				${fields}
			</if>
			<if test="fields == null">
			    id,code,name,province
			</if>
		FROM bbs_city
	</sql>
	<!-- 查询操作XxxQuery类适合 非null字段的查询 模糊查询 -->
	<sql id="cityListWhere">
		<where>
				<if test="id != null">
					and id=#{id}
				</if>
				<if test="code != null">
				<if test="codeLike == false">
					and code=#{code}
				</if>
				<if test="codeLike == true">
					and  code like "%${code}%"
				</if>
				</if>
				<if test="name != null">
				<if test="nameLike == false">
					and name=#{name}
				</if>
				<if test="nameLike == true">
					and  name like "%${name}%"
				</if>
				</if>
				<if test="province != null">
				<if test="provinceLike == false">
					and province=#{province}
				</if>
				<if test="provinceLike == true">
					and  province like "%${province}%"
				</if>
				</if>
		</where>
	</sql>

    <!-- 排序列表 -->
	<sql id="cityListOrder">
		<if test="orderFields != null and orderFields.size >0">
		order by 
			<foreach collection="orderFields" separator="," item="orderField">
				${orderField.fieldName} ${orderField.order}
			</foreach>
		</if>
	</sql>
    
    <!-- 分页查询 -->
	<sql id="cityListLimit">
		<if test="startRow != null">
			limit #{startRow},#{pageSize}
		</if>
	</sql>

	<!-- 根据主键查询 -->
	<select id="getCityByKey" resultMap="city" parameterType="hashMap">
		SELECT id,code,name,province FROM bbs_city
		WHERE
		id=#{id}
	</select>
	<select id="getCitysByKeys" resultMap="city" parameterType="ArrayList">
		SELECT id,code,name,province FROM bbs_city
		WHERE
		id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</select>

	<!-- 根据主键删除  传入的参数为hashMap-->
	<delete id="deleteByKey" parameterType="hashMap">
		DELETE FROM bbs_city
		WHERE
		id=#{id}
	</delete>

	<!-- 根据主键批量删除 传入的参数为如果为List及其子类的话，不用parameterType传递 -->
	<delete id="deleteByKeys">
		DELETE FROM bbs_city
		WHERE
		id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</delete>

	<!-- 根据主键更新 -->
	<update id="updateCityByKey" parameterType="City">
		UPDATE bbs_city
		<set>
			<trim suffixOverrides="," >
				<if test="id != null">
					id = #{id},
				</if>
				<if test="code != null">
					code = #{code},
				</if>
				<if test="name != null">
					name = #{name},
				</if>
				<if test="province != null">
					province = #{province}
				</if>
			</trim>
		</set>
		WHERE
		id=#{id}
	</update>
	
	
	<!-- 分页 -->
	<select id="getCityListWithPage" parameterType="CityQuery" resultMap="city">
		<include refid="citySelector" />
		<include refid="cityListWhere" />
		<include refid="cityListOrder" />
		<include refid="cityListLimit" />
	</select>
	<!-- 数据总数 -->
	<select id="getCityListCount" parameterType="CityQuery" resultType="int">
		SELECT count(1) FROM bbs_city
		<include refid="cityListWhere" />
	</select>
	<!-- 数据集合 -->
	<select id="getCityList" parameterType="cityQuery" resultMap="city">
	
		   <include refid="citySelector" />
		   <include refid="cityListWhere" />
		   <include refid="cityListOrder" />
	</select>
	
	<select id="getCitys" parameterType="String" resultMap="city">
	   select * from bbs_city where province = #{province}
	</select>
	
	<!-- 添加 -->
	<insert id="addCity" parameterType="City">
		INSERT INTO bbs_city
		<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="id != null">
					id,
				</if>
				<if test="code != null">
					code,
				</if>
				<if test="name != null">
					name,
				</if>
				<if test="province != null">
					province
				</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
					<if test="id != null">
						#{id},
					</if>
					<if test="code != null">
						#{code},
					</if>
					<if test="name != null">
						#{name},
					</if>
					<if test="province != null">
						#{province}
					</if>
		</trim>
	</insert>
</mapper>
